apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'jacoco'

apply plugin: 'com.jfrog.artifactory'
apply plugin: 'java'
apply plugin: 'maven-publish'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4+')
    }
}

repositories {
    mavenCentral()
}

allprojects {
    repositories {
        maven {
            url "https://artifactory-ios.kupferwerk.net/artifactory"
        }
    }
}

// Grape configuration is used to test @Grape annotation in unit tests using grapeConfig.xml
configurations {
    grape { // Note our simple use case does not use or support transitive dependencies
        transitive = false
    }
}

dependencies {
    compile     group: 'org.codehaus.groovy',   name: 'groovy-all',     version: '2.4.6'
    compile     group: 'com.cloudbees',         name: 'groovy-cps',     version: '1.12'
    compile     group: 'commons-io',            name: 'commons-io',     version: '2.5'
    compile     group: 'org.apache.ivy',        name: 'ivy',            version: '2.4.0'
    compile     group: 'org.assertj',           name: 'assertj-core',   version: '3.4.1'
    testCompile group: 'org.assertj',           name: 'assertj-core',   version: '3.4.1'
    testCompile group: 'junit',                 name: 'junit',          version: '4.11'
    grape       group: 'org.apache.commons',    name: 'commons-math3',  version: '3.4.1'
}

// Get external properties from file
if (project.hasProperty('extProps')) {
    def props = new Properties()
    file("$extProps").withInputStream { props.load(it) }
    props.stringPropertyNames().forEach {
        ext."$it" = props.getProperty(it)
    }
}

defaultTasks 'test'

test {
    systemProperty "grape.config", "$projectDir/grapeConfig.xml"
    systemProperty "grape.home", file("$buildDir/grapes").toURI()
    // Settings for debugging @Grape() resolution in test cases
    //systemProperty "groovy.grape.report.downloads", "true"
    //systemProperty "ivy.message.logger.level", "4"
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.intive'
            artifactId = 'jenkins-pipeline-unit'
            version = '1.2'
            from components.java
        }
    }
}

artifactory {
    contextUrl = 'https://artifactory-ios.kupferwerk.net/artifactory'
    publish {
        repository {
            repoKey = 'jenkins-pipeline-unit' // The Artifactory repository key to publish to
            username = "${artifactory_user}" // The publisher user name
            password = "${artifactory_password}" // The publisher password
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('mavenJava')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            //properties = ['qa.level': 'basic', 'dev.team' : 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
}